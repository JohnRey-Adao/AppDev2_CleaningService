{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CustomerDashboardComponent_tr_68_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function CustomerDashboardComponent_tr_68_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const booking_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.cancelBooking(booking_r2.id));\n    });\n    i0.ɵɵtext(1, \" Cancel \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CustomerDashboardComponent_tr_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\")(11, \"span\", 30);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtemplate(14, CustomerDashboardComponent_tr_68_button_14_Template, 2, 0, \"button\", 31);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const booking_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.formatDate(booking_r2.bookingDate));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", booking_r2.cleaner.firstName, \" \", booking_r2.cleaner.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", booking_r2.durationHours, \"h\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 8, booking_r2.totalAmount));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.getStatusClass(booking_r2.status));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", booking_r2.status, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", booking_r2.status === \"PENDING\" || booking_r2.status === \"CONFIRMED\");\n  }\n}\nfunction CustomerDashboardComponent_div_70_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 45);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"currency\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cleaner_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cleaner_r5.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate3(\" \", cleaner_r5.firstName, \" \", cleaner_r5.lastName, \" - \", i0.ɵɵpipeBind1(2, 4, cleaner_r5.hourlyRate), \"/hr \");\n  }\n}\nfunction CustomerDashboardComponent_div_70_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"div\", 27)(2, \"h5\");\n    i0.ɵɵelement(3, \"i\", 33);\n    i0.ɵɵtext(4, \"Book a Cleaner\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"form\", 34);\n    i0.ɵɵlistener(\"ngSubmit\", function CustomerDashboardComponent_div_70_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.createBooking());\n    });\n    i0.ɵɵelementStart(7, \"div\", 35)(8, \"label\", 36);\n    i0.ɵɵtext(9, \"Select Cleaner\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"select\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CustomerDashboardComponent_div_70_Template_select_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.selectedCleanerId, $event) || (ctx_r2.selectedCleanerId = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(11, \"option\", 38);\n    i0.ɵɵtext(12, \"Choose a cleaner...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, CustomerDashboardComponent_div_70_option_13_Template, 3, 6, \"option\", 39);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 35)(15, \"label\", 36);\n    i0.ɵɵtext(16, \"Date & Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"input\", 40);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CustomerDashboardComponent_div_70_Template_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.bookingDate, $event) || (ctx_r2.bookingDate = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 35)(19, \"label\", 36);\n    i0.ɵɵtext(20, \"Duration (hours)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"input\", 41);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CustomerDashboardComponent_div_70_Template_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.durationHours, $event) || (ctx_r2.durationHours = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"div\", 35)(23, \"label\", 36);\n    i0.ɵɵtext(24, \"Special Instructions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"textarea\", 42);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function CustomerDashboardComponent_div_70_Template_textarea_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.specialInstructions, $event) || (ctx_r2.specialInstructions = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"div\", 43)(27, \"button\", 44);\n    i0.ɵɵtext(28, \"Book Now\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.selectedCleanerId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.availableCleaners);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.bookingDate);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.durationHours);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.specialInstructions);\n  }\n}\nexport class CustomerDashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.customer = null;\n    this.bookings = [];\n    this.availableCleaners = [];\n    this.totalBookings = 0;\n    this.pendingBookings = 0;\n    this.completedBookings = 0;\n    this.totalSpent = 0;\n    this.showBookingForm = false;\n    this.selectedCleanerId = null;\n    this.bookingDate = '';\n    this.durationHours = 2;\n    this.specialInstructions = '';\n  }\n  ngOnInit() {\n    this.loadCustomerData();\n    this.loadBookings();\n    this.loadAvailableCleaners();\n  }\n  loadCustomerData() {\n    // In a real app, you'd get the current user's ID from the auth service\n    const customerId = 1; // This should come from the logged-in user\n    this.http.get(`http://localhost:8080/api/customers/${customerId}`).subscribe({\n      next: customer => {\n        this.customer = customer;\n      },\n      error: error => {\n        console.error('Error loading customer data:', error);\n      }\n    });\n  }\n  loadBookings() {\n    const customerId = 1; // This should come from the logged-in user\n    this.http.get(`http://localhost:8080/api/bookings/customer/${customerId}`).subscribe({\n      next: bookings => {\n        this.bookings = bookings;\n        this.calculateStats();\n      },\n      error: error => {\n        console.error('Error loading bookings:', error);\n      }\n    });\n  }\n  loadAvailableCleaners() {\n    this.http.get('http://localhost:8080/api/cleaners/available').subscribe({\n      next: cleaners => {\n        this.availableCleaners = cleaners;\n      },\n      error: error => {\n        console.error('Error loading cleaners:', error);\n      }\n    });\n  }\n  calculateStats() {\n    this.totalBookings = this.bookings.length;\n    this.pendingBookings = this.bookings.filter(b => b.status === 'PENDING').length;\n    this.completedBookings = this.bookings.filter(b => b.status === 'COMPLETED').length;\n    this.totalSpent = this.bookings.filter(b => b.status === 'COMPLETED').reduce((sum, b) => sum + b.totalAmount, 0);\n  }\n  createBooking() {\n    if (!this.selectedCleanerId || !this.bookingDate) return;\n    const bookingRequest = {\n      customerId: this.customer?.id,\n      cleanerId: this.selectedCleanerId,\n      bookingDate: this.bookingDate,\n      durationHours: this.durationHours,\n      specialInstructions: this.specialInstructions,\n      serviceAddress: this.customer?.address\n    };\n    this.http.post('http://localhost:8080/api/bookings', bookingRequest).subscribe({\n      next: () => {\n        this.loadBookings();\n        this.showBookingForm = false;\n        this.resetBookingForm();\n      },\n      error: error => {\n        console.error('Error creating booking:', error);\n      }\n    });\n  }\n  cancelBooking(bookingId) {\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/cancel`, {}).subscribe({\n      next: () => {\n        this.loadBookings();\n      },\n      error: error => {\n        console.error('Error cancelling booking:', error);\n      }\n    });\n  }\n  resetBookingForm() {\n    this.selectedCleanerId = null;\n    this.bookingDate = '';\n    this.durationHours = 2;\n    this.specialInstructions = '';\n  }\n  formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString();\n  }\n  getStatusClass(status) {\n    switch (status) {\n      case 'PENDING':\n        return 'bg-warning';\n      case 'CONFIRMED':\n        return 'bg-info';\n      case 'IN_PROGRESS':\n        return 'bg-primary';\n      case 'COMPLETED':\n        return 'bg-success';\n      case 'CANCELLED':\n        return 'bg-danger';\n      default:\n        return 'bg-secondary';\n    }\n  }\n  static {\n    this.ɵfac = function CustomerDashboardComponent_Factory(t) {\n      return new (t || CustomerDashboardComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CustomerDashboardComponent,\n      selectors: [[\"app-customer-dashboard\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 99,\n      vars: 14,\n      consts: [[1, \"row\"], [1, \"col-12\"], [1, \"fas\", \"fa-home\", \"me-2\"], [1, \"row\", \"mb-4\"], [1, \"col-md-3\"], [1, \"card\", \"text-center\"], [1, \"card-body\"], [1, \"fas\", \"fa-calendar-check\", \"fa-2x\", \"text-primary\", \"mb-2\"], [1, \"card-title\"], [1, \"text-primary\"], [1, \"fas\", \"fa-clock\", \"fa-2x\", \"text-warning\", \"mb-2\"], [1, \"text-warning\"], [1, \"fas\", \"fa-check-circle\", \"fa-2x\", \"text-success\", \"mb-2\"], [1, \"text-success\"], [1, \"fas\", \"fa-dollar-sign\", \"fa-2x\", \"text-info\", \"mb-2\"], [1, \"text-info\"], [1, \"col-md-8\"], [1, \"card\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"fas\", \"fa-list\", \"me-2\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"click\"], [1, \"fas\", \"fa-plus\", \"me-1\"], [1, \"table-responsive\"], [1, \"table\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [1, \"col-md-4\"], [\"class\", \"card\", 4, \"ngIf\"], [1, \"card-header\"], [1, \"fas\", \"fa-user\", \"me-2\"], [1, \"btn\", \"btn-outline-primary\", \"btn-sm\"], [1, \"badge\", 3, \"ngClass\"], [\"class\", \"btn btn-sm btn-outline-danger\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [1, \"fas\", \"fa-plus\", \"me-2\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"name\", \"cleaner\", \"required\", \"\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"datetime-local\", \"name\", \"date\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"name\", \"duration\", \"min\", \"1\", \"max\", \"8\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"instructions\", \"rows\", \"3\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [3, \"value\"]],\n      template: function CustomerDashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵelement(3, \"i\", 2);\n          i0.ɵɵtext(4, \"Customer Dashboard\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"hr\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 3)(7, \"div\", 4)(8, \"div\", 5)(9, \"div\", 6);\n          i0.ɵɵelement(10, \"i\", 7);\n          i0.ɵɵelementStart(11, \"h5\", 8);\n          i0.ɵɵtext(12, \"Total Bookings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"h3\", 9);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"div\", 4)(16, \"div\", 5)(17, \"div\", 6);\n          i0.ɵɵelement(18, \"i\", 10);\n          i0.ɵɵelementStart(19, \"h5\", 8);\n          i0.ɵɵtext(20, \"Pending\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"h3\", 11);\n          i0.ɵɵtext(22);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(23, \"div\", 4)(24, \"div\", 5)(25, \"div\", 6);\n          i0.ɵɵelement(26, \"i\", 12);\n          i0.ɵɵelementStart(27, \"h5\", 8);\n          i0.ɵɵtext(28, \"Completed\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"h3\", 13);\n          i0.ɵɵtext(30);\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(31, \"div\", 4)(32, \"div\", 5)(33, \"div\", 6);\n          i0.ɵɵelement(34, \"i\", 14);\n          i0.ɵɵelementStart(35, \"h5\", 8);\n          i0.ɵɵtext(36, \"Total Spent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"h3\", 15);\n          i0.ɵɵtext(38);\n          i0.ɵɵpipe(39, \"currency\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(40, \"div\", 0)(41, \"div\", 16)(42, \"div\", 17)(43, \"div\", 18)(44, \"h5\");\n          i0.ɵɵelement(45, \"i\", 19);\n          i0.ɵɵtext(46, \"My Bookings\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"button\", 20);\n          i0.ɵɵlistener(\"click\", function CustomerDashboardComponent_Template_button_click_47_listener() {\n            return ctx.showBookingForm = !ctx.showBookingForm;\n          });\n          i0.ɵɵelement(48, \"i\", 21);\n          i0.ɵɵtext(49, \"New Booking \");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(50, \"div\", 6)(51, \"div\", 22)(52, \"table\", 23)(53, \"thead\")(54, \"tr\")(55, \"th\");\n          i0.ɵɵtext(56, \"Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(57, \"th\");\n          i0.ɵɵtext(58, \"Cleaner\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(59, \"th\");\n          i0.ɵɵtext(60, \"Duration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(61, \"th\");\n          i0.ɵɵtext(62, \"Amount\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(63, \"th\");\n          i0.ɵɵtext(64, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(65, \"th\");\n          i0.ɵɵtext(66, \"Actions\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(67, \"tbody\");\n          i0.ɵɵtemplate(68, CustomerDashboardComponent_tr_68_Template, 15, 10, \"tr\", 24);\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelementStart(69, \"div\", 25);\n          i0.ɵɵtemplate(70, CustomerDashboardComponent_div_70_Template, 29, 5, \"div\", 26);\n          i0.ɵɵelementStart(71, \"div\", 17)(72, \"div\", 27)(73, \"h5\");\n          i0.ɵɵelement(74, \"i\", 28);\n          i0.ɵɵtext(75, \"My Profile\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(76, \"div\", 6)(77, \"p\")(78, \"strong\");\n          i0.ɵɵtext(79, \"Name:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(80);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(81, \"p\")(82, \"strong\");\n          i0.ɵɵtext(83, \"Email:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(84);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(85, \"p\")(86, \"strong\");\n          i0.ɵɵtext(87, \"Phone:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(88);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(89, \"p\")(90, \"strong\");\n          i0.ɵɵtext(91, \"Address:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(92);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(93, \"p\")(94, \"strong\");\n          i0.ɵɵtext(95, \"City:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(96);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(97, \"button\", 29);\n          i0.ɵɵtext(98, \"Edit Profile\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(14);\n          i0.ɵɵtextInterpolate(ctx.totalBookings);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.pendingBookings);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.completedBookings);\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 12, ctx.totalSpent));\n          i0.ɵɵadvance(30);\n          i0.ɵɵproperty(\"ngForOf\", ctx.bookings);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.showBookingForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵtextInterpolate2(\" \", ctx.customer == null ? null : ctx.customer.firstName, \" \", ctx.customer == null ? null : ctx.customer.lastName, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.customer == null ? null : ctx.customer.email, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", (ctx.customer == null ? null : ctx.customer.phoneNumber) || \"Not provided\", \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", ctx.customer == null ? null : ctx.customer.address, \"\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", (ctx.customer == null ? null : ctx.customer.city) || \"Not provided\", \"\");\n        }\n      },\n      dependencies: [CommonModule, i2.NgClass, i2.NgForOf, i2.NgIf, i2.CurrencyPipe, FormsModule, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinValidator, i3.MaxValidator, i3.NgModel, i3.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","FormsModule","i0","ɵɵelementStart","ɵɵlistener","CustomerDashboardComponent_tr_68_button_14_Template_button_click_0_listener","ɵɵrestoreView","_r1","booking_r2","ɵɵnextContext","$implicit","ctx_r2","ɵɵresetView","cancelBooking","id","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","CustomerDashboardComponent_tr_68_button_14_Template","ɵɵadvance","ɵɵtextInterpolate","formatDate","bookingDate","ɵɵtextInterpolate2","cleaner","firstName","lastName","ɵɵtextInterpolate1","durationHours","ɵɵpipeBind1","totalAmount","ɵɵproperty","getStatusClass","status","cleaner_r5","ɵɵtextInterpolate3","hourlyRate","ɵɵelement","CustomerDashboardComponent_div_70_Template_form_ngSubmit_6_listener","_r4","createBooking","ɵɵtwoWayListener","CustomerDashboardComponent_div_70_Template_select_ngModelChange_10_listener","$event","ɵɵtwoWayBindingSet","selectedCleanerId","CustomerDashboardComponent_div_70_option_13_Template","CustomerDashboardComponent_div_70_Template_input_ngModelChange_17_listener","CustomerDashboardComponent_div_70_Template_input_ngModelChange_21_listener","CustomerDashboardComponent_div_70_Template_textarea_ngModelChange_25_listener","specialInstructions","ɵɵtwoWayProperty","availableCleaners","CustomerDashboardComponent","constructor","http","customer","bookings","totalBookings","pendingBookings","completedBookings","totalSpent","showBookingForm","ngOnInit","loadCustomerData","loadBookings","loadAvailableCleaners","customerId","get","subscribe","next","error","console","calculateStats","cleaners","length","filter","b","reduce","sum","bookingRequest","cleanerId","serviceAddress","address","post","resetBookingForm","bookingId","put","dateString","Date","toLocaleDateString","ɵɵdirectiveInject","i1","HttpClient","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CustomerDashboardComponent_Template","rf","ctx","CustomerDashboardComponent_Template_button_click_47_listener","CustomerDashboardComponent_tr_68_Template","CustomerDashboardComponent_div_70_Template","email","phoneNumber","city","i2","NgClass","NgForOf","NgIf","CurrencyPipe","i3","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","NumberValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","MinValidator","MaxValidator","NgModel","NgForm","encapsulation"],"sources":["C:\\WebApps_Proj\\cleaningservice\\webstore\\src\\app\\components\\dashboard\\customer-dashboard\\customer-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Customer, Cleaner, Booking } from '../../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-customer-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule],\r\n  template: `\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <h2><i class=\"fas fa-home me-2\"></i>Customer Dashboard</h2>\r\n        <hr>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row mb-4\">\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-center\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-calendar-check fa-2x text-primary mb-2\"></i>\r\n            <h5 class=\"card-title\">Total Bookings</h5>\r\n            <h3 class=\"text-primary\">{{ totalBookings }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-center\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-clock fa-2x text-warning mb-2\"></i>\r\n            <h5 class=\"card-title\">Pending</h5>\r\n            <h3 class=\"text-warning\">{{ pendingBookings }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-center\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-check-circle fa-2x text-success mb-2\"></i>\r\n            <h5 class=\"card-title\">Completed</h5>\r\n            <h3 class=\"text-success\">{{ completedBookings }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-3\">\r\n        <div class=\"card text-center\">\r\n          <div class=\"card-body\">\r\n            <i class=\"fas fa-dollar-sign fa-2x text-info mb-2\"></i>\r\n            <h5 class=\"card-title\">Total Spent</h5>\r\n            <h3 class=\"text-info\">{{ totalSpent | currency }}</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-8\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n            <h5><i class=\"fas fa-list me-2\"></i>My Bookings</h5>\r\n            <button class=\"btn btn-primary btn-sm\" (click)=\"showBookingForm = !showBookingForm\">\r\n              <i class=\"fas fa-plus me-1\"></i>New Booking\r\n            </button>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Cleaner</th>\r\n                    <th>Duration</th>\r\n                    <th>Amount</th>\r\n                    <th>Status</th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor=\"let booking of bookings\">\r\n                    <td>{{ formatDate(booking.bookingDate) }}</td>\r\n                    <td>{{ booking.cleaner.firstName }} {{ booking.cleaner.lastName }}</td>\r\n                    <td>{{ booking.durationHours }}h</td>\r\n                    <td>{{ booking.totalAmount | currency }}</td>\r\n                    <td>\r\n                      <span class=\"badge\" [ngClass]=\"getStatusClass(booking.status)\">\r\n                        {{ booking.status }}\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <button class=\"btn btn-sm btn-outline-danger\" \r\n                              *ngIf=\"booking.status === 'PENDING' || booking.status === 'CONFIRMED'\"\r\n                              (click)=\"cancelBooking(booking.id)\">\r\n                        Cancel\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-md-4\">\r\n        <div class=\"card\" *ngIf=\"showBookingForm\">\r\n          <div class=\"card-header\">\r\n            <h5><i class=\"fas fa-plus me-2\"></i>Book a Cleaner</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form (ngSubmit)=\"createBooking()\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Select Cleaner</label>\r\n                <select class=\"form-select\" [(ngModel)]=\"selectedCleanerId\" name=\"cleaner\" required>\r\n                  <option value=\"\">Choose a cleaner...</option>\r\n                  <option *ngFor=\"let cleaner of availableCleaners\" [value]=\"cleaner.id\">\r\n                    {{ cleaner.firstName }} {{ cleaner.lastName }} - {{ cleaner.hourlyRate | currency }}/hr\r\n                  </option>\r\n                </select>\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Date & Time</label>\r\n                <input type=\"datetime-local\" class=\"form-control\" [(ngModel)]=\"bookingDate\" name=\"date\" required>\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Duration (hours)</label>\r\n                <input type=\"number\" class=\"form-control\" [(ngModel)]=\"durationHours\" name=\"duration\" min=\"1\" max=\"8\" required>\r\n              </div>\r\n              \r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label\">Special Instructions</label>\r\n                <textarea class=\"form-control\" [(ngModel)]=\"specialInstructions\" name=\"instructions\" rows=\"3\"></textarea>\r\n              </div>\r\n              \r\n              <div class=\"d-grid\">\r\n                <button type=\"submit\" class=\"btn btn-primary\">Book Now</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5><i class=\"fas fa-user me-2\"></i>My Profile</h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p><strong>Name:</strong> {{ customer?.firstName }} {{ customer?.lastName }}</p>\r\n            <p><strong>Email:</strong> {{ customer?.email }}</p>\r\n            <p><strong>Phone:</strong> {{ customer?.phoneNumber || 'Not provided' }}</p>\r\n            <p><strong>Address:</strong> {{ customer?.address }}</p>\r\n            <p><strong>City:</strong> {{ customer?.city || 'Not provided' }}</p>\r\n            <button class=\"btn btn-outline-primary btn-sm\">Edit Profile</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class CustomerDashboardComponent implements OnInit {\r\n  customer: Customer | null = null;\r\n  bookings: Booking[] = [];\r\n  availableCleaners: Cleaner[] = [];\r\n  totalBookings = 0;\r\n  pendingBookings = 0;\r\n  completedBookings = 0;\r\n  totalSpent = 0;\r\n  showBookingForm = false;\r\n  \r\n  selectedCleanerId: number | null = null;\r\n  bookingDate = '';\r\n  durationHours = 2;\r\n  specialInstructions = '';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.loadCustomerData();\r\n    this.loadBookings();\r\n    this.loadAvailableCleaners();\r\n  }\r\n\r\n  loadCustomerData() {\r\n    // In a real app, you'd get the current user's ID from the auth service\r\n    const customerId = 1; // This should come from the logged-in user\r\n    this.http.get<Customer>(`http://localhost:8080/api/customers/${customerId}`).subscribe({\r\n      next: (customer) => {\r\n        this.customer = customer;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading customer data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadBookings() {\r\n    const customerId = 1; // This should come from the logged-in user\r\n    this.http.get<Booking[]>(`http://localhost:8080/api/bookings/customer/${customerId}`).subscribe({\r\n      next: (bookings) => {\r\n        this.bookings = bookings;\r\n        this.calculateStats();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading bookings:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAvailableCleaners() {\r\n    this.http.get<Cleaner[]>('http://localhost:8080/api/cleaners/available').subscribe({\r\n      next: (cleaners) => {\r\n        this.availableCleaners = cleaners;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading cleaners:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  calculateStats() {\r\n    this.totalBookings = this.bookings.length;\r\n    this.pendingBookings = this.bookings.filter(b => b.status === 'PENDING').length;\r\n    this.completedBookings = this.bookings.filter(b => b.status === 'COMPLETED').length;\r\n    this.totalSpent = this.bookings\r\n      .filter(b => b.status === 'COMPLETED')\r\n      .reduce((sum, b) => sum + b.totalAmount, 0);\r\n  }\r\n\r\n  createBooking() {\r\n    if (!this.selectedCleanerId || !this.bookingDate) return;\r\n\r\n    const bookingRequest = {\r\n      customerId: this.customer?.id,\r\n      cleanerId: this.selectedCleanerId,\r\n      bookingDate: this.bookingDate,\r\n      durationHours: this.durationHours,\r\n      specialInstructions: this.specialInstructions,\r\n      serviceAddress: this.customer?.address\r\n    };\r\n\r\n    this.http.post('http://localhost:8080/api/bookings', bookingRequest).subscribe({\r\n      next: () => {\r\n        this.loadBookings();\r\n        this.showBookingForm = false;\r\n        this.resetBookingForm();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error creating booking:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  cancelBooking(bookingId: number) {\r\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/cancel`, {}).subscribe({\r\n      next: () => {\r\n        this.loadBookings();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error cancelling booking:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  resetBookingForm() {\r\n    this.selectedCleanerId = null;\r\n    this.bookingDate = '';\r\n    this.durationHours = 2;\r\n    this.specialInstructions = '';\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    return new Date(dateString).toLocaleDateString();\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status) {\r\n      case 'PENDING': return 'bg-warning';\r\n      case 'CONFIRMED': return 'bg-info';\r\n      case 'IN_PROGRESS': return 'bg-primary';\r\n      case 'COMPLETED': return 'bg-success';\r\n      case 'CANCELLED': return 'bg-danger';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}