{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nlet CleanerDashboardComponent = class CleanerDashboardComponent {\n  constructor(http) {\n    this.http = http;\n    this.cleaner = null;\n    this.bookings = [];\n    this.totalJobs = 0;\n    this.pendingJobs = 0;\n    this.completedJobs = 0;\n    this.totalEarnings = 0;\n    this.jobsThisMonth = 0;\n    this.earningsThisMonth = 0;\n    this.activeTab = 'overview';\n  }\n  ngOnInit() {\n    this.loadCleanerData();\n    this.loadBookings();\n  }\n  setActiveTab(tabName) {\n    this.activeTab = tabName;\n  }\n  loadCleanerData() {\n    const cleanerId = 2; // This should come from the logged-in user\n    this.http.get(`http://localhost:8080/api/cleaners/${cleanerId}`).subscribe({\n      next: cleaner => {\n        this.cleaner = cleaner;\n      },\n      error: error => {\n        console.error('Error loading cleaner data:', error);\n      }\n    });\n  }\n  loadBookings() {\n    const cleanerId = 2; // This should come from the logged-in user\n    this.http.get(`http://localhost:8080/api/bookings/cleaner/${cleanerId}`).subscribe({\n      next: bookings => {\n        this.bookings = bookings;\n        this.calculateStats();\n      },\n      error: error => {\n        console.error('Error loading bookings:', error);\n      }\n    });\n  }\n  calculateStats() {\n    this.totalJobs = this.bookings.length;\n    this.pendingJobs = this.bookings.filter(b => b.status === 'PENDING').length;\n    this.completedJobs = this.bookings.filter(b => b.status === 'COMPLETED').length;\n    this.totalEarnings = this.bookings.filter(b => b.status === 'COMPLETED').reduce((sum, b) => sum + b.totalAmount, 0);\n    // Calculate monthly stats (simplified)\n    const currentMonth = new Date().getMonth();\n    const currentYear = new Date().getFullYear();\n    const monthlyBookings = this.bookings.filter(b => {\n      const bookingDate = new Date(b.bookingDate);\n      return bookingDate.getMonth() === currentMonth && bookingDate.getFullYear() === currentYear;\n    });\n    this.jobsThisMonth = monthlyBookings.length;\n    this.earningsThisMonth = monthlyBookings.filter(b => b.status === 'COMPLETED').reduce((sum, b) => sum + b.totalAmount, 0);\n  }\n  confirmBooking(bookingId) {\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/confirm`, {}).subscribe({\n      next: () => {\n        this.loadBookings();\n      },\n      error: error => {\n        console.error('Error confirming booking:', error);\n      }\n    });\n  }\n  startBooking(bookingId) {\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/start`, {}).subscribe({\n      next: () => {\n        this.loadBookings();\n      },\n      error: error => {\n        console.error('Error starting booking:', error);\n      }\n    });\n  }\n  completeBooking(bookingId) {\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/complete`, {}).subscribe({\n      next: () => {\n        this.loadBookings();\n      },\n      error: error => {\n        console.error('Error completing booking:', error);\n      }\n    });\n  }\n  toggleStatus() {\n    if (!this.cleaner) return;\n    const newStatus = this.cleaner.cleanerStatus === 'AVAILABLE' ? 'OFFLINE' : 'AVAILABLE';\n    this.http.put(`http://localhost:8080/api/cleaners/${this.cleaner.id}/status?status=${newStatus}`, {}).subscribe({\n      next: () => {\n        this.loadCleanerData();\n      },\n      error: error => {\n        console.error('Error updating status:', error);\n      }\n    });\n  }\n  formatDate(dateString) {\n    return new Date(dateString).toLocaleDateString();\n  }\n  getStatusClass(status) {\n    switch (status) {\n      case 'PENDING':\n        return 'bg-warning';\n      case 'CONFIRMED':\n        return 'bg-info';\n      case 'IN_PROGRESS':\n        return 'bg-primary';\n      case 'COMPLETED':\n        return 'bg-success';\n      case 'CANCELLED':\n        return 'bg-danger';\n      case 'AVAILABLE':\n        return 'bg-success';\n      case 'BUSY':\n        return 'bg-warning';\n      case 'OFFLINE':\n        return 'bg-secondary';\n      default:\n        return 'bg-secondary';\n    }\n  }\n};\nCleanerDashboardComponent = __decorate([Component({\n  selector: 'app-cleaner-dashboard',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './cleaner-dashboard.component.html',\n  styles: []\n})], CleanerDashboardComponent);\nexport { CleanerDashboardComponent };","map":{"version":3,"names":["Component","CommonModule","CleanerDashboardComponent","constructor","http","cleaner","bookings","totalJobs","pendingJobs","completedJobs","totalEarnings","jobsThisMonth","earningsThisMonth","activeTab","ngOnInit","loadCleanerData","loadBookings","setActiveTab","tabName","cleanerId","get","subscribe","next","error","console","calculateStats","length","filter","b","status","reduce","sum","totalAmount","currentMonth","Date","getMonth","currentYear","getFullYear","monthlyBookings","bookingDate","confirmBooking","bookingId","put","startBooking","completeBooking","toggleStatus","newStatus","cleanerStatus","id","formatDate","dateString","toLocaleDateString","getStatusClass","__decorate","selector","standalone","imports","templateUrl","styles"],"sources":["C:\\WebApps_Proj\\cleaningservice\\webstore\\src\\app\\components\\dashboard\\cleaner-dashboard\\cleaner-dashboard.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Cleaner, Booking } from '../../../models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-cleaner-dashboard',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './cleaner-dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class CleanerDashboardComponent implements OnInit {\r\n  cleaner: Cleaner | null = null;\r\n  bookings: Booking[] = [];\r\n  totalJobs = 0;\r\n  pendingJobs = 0;\r\n  completedJobs = 0;\r\n  totalEarnings = 0;\r\n  jobsThisMonth = 0;\r\n  earningsThisMonth = 0;\r\n  activeTab = 'overview';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  ngOnInit() {\r\n    this.loadCleanerData();\r\n    this.loadBookings();\r\n  }\r\n\r\n  setActiveTab(tabName: string) {\r\n    this.activeTab = tabName;\r\n  }\r\n\r\n  loadCleanerData() {\r\n    const cleanerId = 2; // This should come from the logged-in user\r\n    this.http.get<Cleaner>(`http://localhost:8080/api/cleaners/${cleanerId}`).subscribe({\r\n      next: (cleaner) => {\r\n        this.cleaner = cleaner;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading cleaner data:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  loadBookings() {\r\n    const cleanerId = 2; // This should come from the logged-in user\r\n    this.http.get<Booking[]>(`http://localhost:8080/api/bookings/cleaner/${cleanerId}`).subscribe({\r\n      next: (bookings) => {\r\n        this.bookings = bookings;\r\n        this.calculateStats();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading bookings:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  calculateStats() {\r\n    this.totalJobs = this.bookings.length;\r\n    this.pendingJobs = this.bookings.filter(b => b.status === 'PENDING').length;\r\n    this.completedJobs = this.bookings.filter(b => b.status === 'COMPLETED').length;\r\n    this.totalEarnings = this.bookings\r\n      .filter(b => b.status === 'COMPLETED')\r\n      .reduce((sum, b) => sum + b.totalAmount, 0);\r\n    \r\n    // Calculate monthly stats (simplified)\r\n    const currentMonth = new Date().getMonth();\r\n    const currentYear = new Date().getFullYear();\r\n    const monthlyBookings = this.bookings.filter(b => {\r\n      const bookingDate = new Date(b.bookingDate);\r\n      return bookingDate.getMonth() === currentMonth && bookingDate.getFullYear() === currentYear;\r\n    });\r\n    \r\n    this.jobsThisMonth = monthlyBookings.length;\r\n    this.earningsThisMonth = monthlyBookings\r\n      .filter(b => b.status === 'COMPLETED')\r\n      .reduce((sum, b) => sum + b.totalAmount, 0);\r\n  }\r\n\r\n  confirmBooking(bookingId: number) {\r\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/confirm`, {}).subscribe({\r\n      next: () => {\r\n        this.loadBookings();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error confirming booking:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  startBooking(bookingId: number) {\r\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/start`, {}).subscribe({\r\n      next: () => {\r\n        this.loadBookings();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error starting booking:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  completeBooking(bookingId: number) {\r\n    this.http.put(`http://localhost:8080/api/bookings/${bookingId}/complete`, {}).subscribe({\r\n      next: () => {\r\n        this.loadBookings();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error completing booking:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleStatus() {\r\n    if (!this.cleaner) return;\r\n    \r\n    const newStatus = this.cleaner.cleanerStatus === 'AVAILABLE' ? 'OFFLINE' : 'AVAILABLE';\r\n    this.http.put(`http://localhost:8080/api/cleaners/${this.cleaner.id}/status?status=${newStatus}`, {}).subscribe({\r\n      next: () => {\r\n        this.loadCleanerData();\r\n      },\r\n      error: (error) => {\r\n        console.error('Error updating status:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    return new Date(dateString).toLocaleDateString();\r\n  }\r\n\r\n  getStatusClass(status: string): string {\r\n    switch (status) {\r\n      case 'PENDING': return 'bg-warning';\r\n      case 'CONFIRMED': return 'bg-info';\r\n      case 'IN_PROGRESS': return 'bg-primary';\r\n      case 'COMPLETED': return 'bg-success';\r\n      case 'CANCELLED': return 'bg-danger';\r\n      case 'AVAILABLE': return 'bg-success';\r\n      case 'BUSY': return 'bg-warning';\r\n      case 'OFFLINE': return 'bg-secondary';\r\n      default: return 'bg-secondary';\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}